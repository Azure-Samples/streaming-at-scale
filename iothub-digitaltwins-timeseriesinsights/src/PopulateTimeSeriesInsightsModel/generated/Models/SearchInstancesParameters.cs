// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Parameters of how to return time series instances by search instances
    /// call.
    /// </summary>
    public partial class SearchInstancesParameters
    {
        /// <summary>
        /// Initializes a new instance of the SearchInstancesParameters class.
        /// </summary>
        public SearchInstancesParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchInstancesParameters class.
        /// </summary>
        /// <param name="recursive">Definition of which instances are returned.
        /// When recursive is set to 'true', all instances that have the path
        /// that starts with path the path parameter are returned. When
        /// recursive is set to 'false', only instances that have the path that
        /// exactly matches the path parameter are returned. Using recursive
        /// search allows to implement search user experience, while using
        /// non-recursive search allows to implement navigation experience.
        /// Optional, default is 'true'.</param>
        /// <param name="sort">Definition of how time series instances are
        /// sorted before being returned by search instances call - relevance
        /// or alphabetical. Optional, default is "Rank".</param>
        /// <param name="highlights">Definition of highlighted search results
        /// or not. When it is set to 'true', the highlighted search results
        /// are returned. When it is set to 'false', the highlighted search
        /// results are not returned. Default is 'true'.</param>
        /// <param name="pageSize">Maximum number of instances expected in each
        /// page of the result. Defaults to 10 when not set. Ranges from 1 to
        /// 100. If there are results beyond the page size, the user can use
        /// the continuation token to fetch the next page.</param>
        public SearchInstancesParameters(bool? recursive = default(bool?), InstancesSortParameter sort = default(InstancesSortParameter), bool? highlights = default(bool?), int? pageSize = default(int?))
        {
            Recursive = recursive;
            Sort = sort;
            Highlights = highlights;
            PageSize = pageSize;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets definition of which instances are returned. When
        /// recursive is set to 'true', all instances that have the path that
        /// starts with path the path parameter are returned. When recursive is
        /// set to 'false', only instances that have the path that exactly
        /// matches the path parameter are returned. Using recursive search
        /// allows to implement search user experience, while using
        /// non-recursive search allows to implement navigation experience.
        /// Optional, default is 'true'.
        /// </summary>
        [JsonProperty(PropertyName = "recursive")]
        public bool? Recursive { get; set; }

        /// <summary>
        /// Gets or sets definition of how time series instances are sorted
        /// before being returned by search instances call - relevance or
        /// alphabetical. Optional, default is "Rank".
        /// </summary>
        [JsonProperty(PropertyName = "sort")]
        public InstancesSortParameter Sort { get; set; }

        /// <summary>
        /// Gets or sets definition of highlighted search results or not. When
        /// it is set to 'true', the highlighted search results are returned.
        /// When it is set to 'false', the highlighted search results are not
        /// returned. Default is 'true'.
        /// </summary>
        [JsonProperty(PropertyName = "highlights")]
        public bool? Highlights { get; set; }

        /// <summary>
        /// Gets or sets maximum number of instances expected in each page of
        /// the result. Defaults to 10 when not set. Ranges from 1 to 100. If
        /// there are results beyond the page size, the user can use the
        /// continuation token to fetch the next page.
        /// </summary>
        [JsonProperty(PropertyName = "pageSize")]
        public int? PageSize { get; set; }

    }
}
