// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Time series hierarchy organizes time series instances into a tree.
    /// </summary>
    public partial class TimeSeriesHierarchy
    {
        /// <summary>
        /// Initializes a new instance of the TimeSeriesHierarchy class.
        /// </summary>
        public TimeSeriesHierarchy()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TimeSeriesHierarchy class.
        /// </summary>
        /// <param name="name">User-given unique name for the type. It is
        /// mutable and not null.</param>
        /// <param name="source">Definition of how time series hierarchy tree
        /// levels are created.</param>
        /// <param name="id">Case-sensitive unique hierarchy identifier. Can be
        /// null while creating hierarchy objects and then server generates the
        /// id, not null on get and delete operations.</param>
        public TimeSeriesHierarchy(string name, TimeSeriesHierarchySource source, string id = default(string))
        {
            Id = id;
            Name = name;
            Source = source;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets case-sensitive unique hierarchy identifier. Can be
        /// null while creating hierarchy objects and then server generates the
        /// id, not null on get and delete operations.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets user-given unique name for the type. It is mutable and
        /// not null.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets definition of how time series hierarchy tree levels
        /// are created.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public TimeSeriesHierarchySource Source { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Source == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Source");
            }
        }
    }
}
