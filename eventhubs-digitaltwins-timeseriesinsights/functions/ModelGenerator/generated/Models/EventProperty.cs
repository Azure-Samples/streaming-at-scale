// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Property of an event that is either stored or computed. Properties are
    /// identified by both name and type. Different events can have properties
    /// with same name, but different type.
    /// </summary>
    public partial class EventProperty
    {
        /// <summary>
        /// Initializes a new instance of the EventProperty class.
        /// </summary>
        public EventProperty()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventProperty class.
        /// </summary>
        /// <param name="name">The name of the property.</param>
        /// <param name="type">The type of the property. Possible values
        /// include: 'Bool', 'DateTime', 'Double', 'String', 'TimeSpan',
        /// 'Long'</param>
        public EventProperty(string name = default(string), string type = default(string))
        {
            Name = name;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the property.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the type of the property. Possible values include:
        /// 'Bool', 'DateTime', 'Double', 'String', 'TimeSpan', 'Long'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

    }
}
