// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Category used in categorical variables. A category is defined by
    /// 'label' and the 'values' that are assigned this label.
    /// </summary>
    public partial class TimeSeriesAggregateCategory
    {
        /// <summary>
        /// Initializes a new instance of the TimeSeriesAggregateCategory
        /// class.
        /// </summary>
        public TimeSeriesAggregateCategory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TimeSeriesAggregateCategory
        /// class.
        /// </summary>
        /// <param name="label">The name of the category which will be used in
        /// constructing the output variable names.</param>
        /// <param name="values">The list of values that a category maps to.
        /// Can be either a unique list of string or list of long.</param>
        public TimeSeriesAggregateCategory(string label, IList<object> values)
        {
            Label = label;
            Values = values;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the category which will be used in
        /// constructing the output variable names.
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Gets or sets the list of values that a category maps to. Can be
        /// either a unique list of string or list of long.
        /// </summary>
        [JsonProperty(PropertyName = "values")]
        public IList<object> Values { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Label == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Label");
            }
            if (Values == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Values");
            }
        }
    }
}
