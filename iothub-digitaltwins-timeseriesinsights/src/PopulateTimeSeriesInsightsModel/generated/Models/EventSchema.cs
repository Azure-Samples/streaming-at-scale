// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Event schema of all events within a given search span. Event schema is
    /// a set of property definitions. Properties are identified by both name
    /// and type. Different events can have properties with same name, but
    /// different type. Event schema may not be contain all persisted
    /// properties when there are too many properties.
    /// </summary>
    public partial class EventSchema
    {
        /// <summary>
        /// Initializes a new instance of the EventSchema class.
        /// </summary>
        public EventSchema()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventSchema class.
        /// </summary>
        /// <param name="properties">A set of property definitions. When
        /// environment has no data, the returned array is empty.</param>
        public EventSchema(IList<EventProperty> properties = default(IList<EventProperty>))
        {
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets a set of property definitions. When environment has no data,
        /// the returned array is empty.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IList<EventProperty> Properties { get; private set; }

    }
}
