// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Values of a single property corresponding to the timestamps. May
    /// contain nulls. Type of values matches the type of property.
    /// </summary>
    public partial class PropertyValues : EventProperty
    {
        /// <summary>
        /// Initializes a new instance of the PropertyValues class.
        /// </summary>
        public PropertyValues()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PropertyValues class.
        /// </summary>
        /// <param name="name">The name of the property.</param>
        /// <param name="type">The type of the property. Possible values
        /// include: 'Bool', 'DateTime', 'Double', 'String', 'TimeSpan',
        /// 'Long'</param>
        /// <param name="values">Values of a single property corresponding to
        /// the timestamps. May contain nulls. Type of values matches the type
        /// of property.</param>
        public PropertyValues(string name = default(string), string type = default(string), IList<object> values = default(IList<object>))
            : base(name, type)
        {
            Values = values;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets values of a single property corresponding to the
        /// timestamps. May contain nulls. Type of values matches the type of
        /// property.
        /// </summary>
        [JsonProperty(PropertyName = "values")]
        public IList<object> Values { get; set; }

    }
}
