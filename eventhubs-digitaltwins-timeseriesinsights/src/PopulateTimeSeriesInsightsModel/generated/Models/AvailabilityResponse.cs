// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Response of Get Availability operation. When environment has no data,
    /// availability property is null.
    /// </summary>
    public partial class AvailabilityResponse
    {
        /// <summary>
        /// Initializes a new instance of the AvailabilityResponse class.
        /// </summary>
        public AvailabilityResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AvailabilityResponse class.
        /// </summary>
        /// <param name="availability">Event availability information when
        /// environment contains events. When environment has no data yet, this
        /// property is null or not present.</param>
        public AvailabilityResponse(Availability availability = default(Availability))
        {
            Availability = availability;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets event availability information when environment contains
        /// events. When environment has no data yet, this property is null or
        /// not present.
        /// </summary>
        [JsonProperty(PropertyName = "availability")]
        public Availability Availability { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Availability != null)
            {
                Availability.Validate();
            }
        }
    }
}
