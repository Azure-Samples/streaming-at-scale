// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.TimeSeriesInsights.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A single page of query results. If query has not finished yet, a page
    /// will have continuation token set. In this case, to get the next page of
    /// results, send the same request again with continuation token parameter.
    /// If query has completed, the continuation token is null. It is also
    /// possible to get an empty page with only continuation token set when no
    /// query results have been computed yet. If paging has completed
    /// (continuation token is null), then timestamps and properties may be
    /// empty if there is no data to return.
    /// </summary>
    public partial class QueryResultPage : PagedResponse
    {
        /// <summary>
        /// Initializes a new instance of the QueryResultPage class.
        /// </summary>
        public QueryResultPage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QueryResultPage class.
        /// </summary>
        /// <param name="continuationToken">If returned, this means that
        /// current results represent a partial result. Continuation token
        /// allows to get the next page of results. To get the next page of
        /// query results, send the same request with continuation token
        /// parameter in "x-ms-continuation" HTTP header.</param>
        /// <param name="timestamps">The timestamps of the values of the time
        /// series. If an aggregation over intervals is used, timestamps
        /// represent the start of corresponding intervals. If events are
        /// retrieved, timestamps are values of timestamp $ts property of
        /// events. Can be null if server was unable to fill the page in this
        /// request, or can be empty if there are no more objects when
        /// continuation token is null.</param>
        /// <param name="properties">Collection of time series properties and
        /// values for each of the timestamps.  Can be null if server was
        /// unable to fill the page in this request, or can be empty if there
        /// are no more objects when continuation token is null.</param>
        /// <param name="progress">Approximate progress of the query in
        /// percentage. It can be between 0 and 100. When the continuation
        /// token in the response is null, the progress is expected to be
        /// 100.</param>
        public QueryResultPage(string continuationToken = default(string), IList<System.DateTime?> timestamps = default(IList<System.DateTime?>), IList<PropertyValues> properties = default(IList<PropertyValues>), double? progress = default(double?))
            : base(continuationToken)
        {
            Timestamps = timestamps;
            Properties = properties;
            Progress = progress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the timestamps of the values of the time series. If an
        /// aggregation over intervals is used, timestamps represent the start
        /// of corresponding intervals. If events are retrieved, timestamps are
        /// values of timestamp $ts property of events. Can be null if server
        /// was unable to fill the page in this request, or can be empty if
        /// there are no more objects when continuation token is null.
        /// </summary>
        [JsonProperty(PropertyName = "timestamps")]
        public IList<System.DateTime?> Timestamps { get; private set; }

        /// <summary>
        /// Gets collection of time series properties and values for each of
        /// the timestamps.  Can be null if server was unable to fill the page
        /// in this request, or can be empty if there are no more objects when
        /// continuation token is null.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IList<PropertyValues> Properties { get; private set; }

        /// <summary>
        /// Gets approximate progress of the query in percentage. It can be
        /// between 0 and 100. When the continuation token in the response is
        /// null, the progress is expected to be 100.
        /// </summary>
        [JsonProperty(PropertyName = "progress")]
        public double? Progress { get; private set; }

    }
}
